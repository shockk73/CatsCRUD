{"version":3,"sources":["components/Loader.js","components/CatList.js","reducers/actions/action-types.js","reducers/cats-crud-reducer.js","reducers/cat-forms-reducer.js","hooks/auth.hook.js","reducers/auth-reducer.js","reducers/auth-forms-reducer.js","reducers/index.js","hooks/http.hook.js","saga.js","hooks/api/cat.api.js","hooks/api/user.api.js","store.js","modules/CatsPage.js","modules/CreatePage.js","components/CatCard.js","modules/CatPage.js","modules/AuthPage.js","components/Navbar.js","App.js","routes.js","index.js"],"names":["Loader","className","connect","state","cats","catState","deleteHandler","length","map","cat","index","key","id","name","age","to","onClick","REQUEST","SUCCESS","createRequestTypes","base","reduce","acc","type","CAT_GETS","CAT_GET","CAT_UPDATE","CAT_DELETE","CAT_CREATE","TOKEN_GET","action","payload","catGetsActions","catGetActions","catUpdateActions","catDeleteActions","catCreateActions","tokenGetActions","user","creds","updateCatCreatingFormAction","form","updateCatUpdatingFormAction","initialState","isLoading","catReducer","types","filter","u_cat","c_cat","catFormReducer","setToLocalSorage","jwtToken","userName","localStorage","setItem","JSON","stringify","getJwtTokenData","data","parse","getItem","removeFromLocalSorage","removeItem","useAuth","useEffect","store","dispatch","isReady","authReducer","username","password","authFormReducer","reducers","combineReducers","catFormState","authState","authFormState","useHttp","token","url","method","body","a","headers","console","log","Authorization","fetch","response","json","ok","Error","message","fetchCats","fetchCat","createCat","updateCat","deleteCat","getToken","fetchCatsWatcher","fetchCatWatcher","createCatWatcher","updateCatWatcher","deleteCatWatcher","getTokenWatcher","rootSaga","catApi","request","getCats","getCat","req","addCat","parseInt","useCatApi","userApi","useUserApi","put","isAlive","takeLatest","all","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","useCallback","history","useHistory","window","M","updateTextFields","changeHandler","event","target","value","pressHandler","push","style","paddingTop","placeholder","onChange","onKeyPress","htmlFor","updateHandler","toString","catId","useParams","loginHandler","e","alert","marginRight","disabled","href","preventDefault","isAuthenticated","routes","path","exact","useRoutes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5091e32b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n/**\r\n * Presentional component for display fetching any information from api\r\n */\r\nexport const Loader = () => (\r\n   <div>\r\n    <div className=\"preloader-wrapper active\">\r\n      <div className=\"spinner-layer spinner-red-only\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst CatList = ({ cats, deleteHandler }) => {\r\n  if (!cats.length) {\r\n    return <p className=\"center\">Котов пока нет</p>\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>№</th>\r\n        <th>Имя</th>\r\n        <th>Возраст</th>\r\n        <th>Открыть</th>\r\n        <th>X</th>\r\n      </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      { cats.map((cat, index) => {\r\n        return (\r\n          <tr key={cat.id}>\r\n            <td>{index + 1}</td>\r\n            <td>{cat.name}</td>\r\n            <td>{cat.age}</td>\r\n            <td>\r\n                <Link to={`/cat/${cat.id}`} >Подробнее</Link>\r\n            </td>\r\n            <td>\r\n                <button onClick={ () => deleteHandler(cat.id) } >Удалить</button>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }) }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n/**\r\n * Presentional component for display car list\r\n */\r\nexport default connect( state => ( {cats: state.catState.cats} ) )(CatList)\r\n","export const REQUEST = 'REQUEST'\r\nexport const SUCCESS = 'SUCCESS'\r\n// export const FAILURE = 'FAILURE'\r\n\r\nfunction createRequestTypes(base) {\r\n  return [REQUEST, SUCCESS].reduce((acc, type) => {\r\n\t\tacc[type] = `${base}_${type}`\r\n\t\treturn acc\r\n\t}, {})\r\n}\r\n\r\nexport const CAT_GETS = createRequestTypes('CAT_GETS')\r\nexport const CAT_GET = createRequestTypes('CAT_GET')\r\nexport const CAT_UPDATE = createRequestTypes('CAT_UPDATE')\r\nexport const CAT_DELETE = createRequestTypes('CAT_DELETE')\r\nexport const CAT_CREATE = createRequestTypes('CAT_CREATE')\r\n\r\nexport const TOKEN_GET = createRequestTypes('TOKEN_GET')\r\n\r\nexport const TOKEN_READY = 'TOKEN_READY'\r\nexport const TOKEN_REMOVE = \"TOKEN_REMOVE\"\r\nexport const UPDATE_AUTH_FORM =  'UPDATE_AUTH_FORM'\r\nexport const UPDATE_CAT_CREATING_FORM = 'UPDATE_CAT_CREATING_FORM'\r\nexport const UPDATE_CAT_UPDATING_FORM = 'UPDATE_CAT_UPDATING_FORM'\r\n\r\n\r\nfunction action(type, payload = {}) {\r\n  return {type, ...payload}\r\n}\r\n\r\nexport const catGetsActions = {\r\n  request: () => action(CAT_GETS[REQUEST]),\r\n  success: (cats) => action(CAT_GETS[SUCCESS], { cats}),\r\n}\r\n\r\nexport const catGetActions = {\r\n  request: id => action(CAT_GET[REQUEST], {id}),\r\n  success: cat => action(CAT_GET[SUCCESS], { ...cat }),\r\n}\r\n\r\nexport const catUpdateActions = {\r\n  request: cat => action(CAT_UPDATE[REQUEST], {...cat}),\r\n  success: cat => action(CAT_UPDATE[SUCCESS], {...cat}),\r\n}\r\n\r\nexport const catDeleteActions = {\r\n  request: id => action(CAT_DELETE[REQUEST], {id}),\r\n  success: id => action(CAT_DELETE[SUCCESS], {id}),\r\n}\r\n\r\nexport const catCreateActions = {\r\n  request: cat => action(CAT_CREATE[REQUEST], {...cat}),\r\n  success: () => action(CAT_CREATE[SUCCESS]),\r\n}\r\n\r\nexport const tokenGetActions = {\r\n  request: (user) => action(TOKEN_GET[REQUEST], {...user}),\r\n  success: (creds) => action(TOKEN_GET[SUCCESS], { ...creds }),\r\n}\r\n\r\nexport const tokenReadyAction = () => action(TOKEN_READY)\r\nexport const tokenRemoveAction = () => action(TOKEN_REMOVE)\r\nexport const updateAuthFormAction = form => action(UPDATE_AUTH_FORM, {...form})\r\nexport const updateCatCreatingFormAction = form => action(UPDATE_CAT_CREATING_FORM, {...form})\r\nexport const updateCatUpdatingFormAction = form => action(UPDATE_CAT_UPDATING_FORM, {...form})","import * as types from '../reducers/actions/action-types';\r\n\r\nconst initialState = {\r\n   cats: [],\r\n   cat: null,\r\n   isLoading: false\r\n};\r\n\r\nconst catReducer = function(state = initialState, action) {\r\n\r\n\r\n  switch(action.type) {\r\n\r\n    case types.CAT_GETS[types.REQUEST]:\r\n        case types.CAT_GET[types.REQUEST]:\r\n            case types.CAT_UPDATE[types.REQUEST]:\r\n                case types.CAT_DELETE[types.REQUEST]:\r\n                    case types.CAT_CREATE[types.REQUEST]:\r\n                        return {  ...state, isLoading: true  }\r\n    case types.CAT_GETS[types.SUCCESS]:\r\n        return {  ...state, cats: action.cats, isLoading: false  }\r\n    case types.CAT_GET[types.SUCCESS]:\r\n        return {  ...state, cat: action.cat, isLoading: false  }\r\n    case types.CAT_DELETE[types.SUCCESS]:\r\n        return {  ...state, cats: [...state.cats.filter( cat => cat.id !== action.id )], isLoading: false  }\r\n    case types.CAT_UPDATE[types.SUCCESS]:\r\n        return { ...state, cat: action.cat, isLoading: false }\r\n    case types.CAT_CREATE[types.SUCCESS]:\r\n        return {  ...state, isLoading: false  }\r\n  }\r\n\r\n  return state;\r\n\r\n}\r\n/**\r\n * State of database cat object\r\n */\r\nexport default catReducer;","import * as types from '../reducers/actions/action-types';\r\n\r\nconst initialState = {\r\n   u_cat: \r\n   {\r\n    name: \"\",\r\n    age: 0\r\n   },\r\n   c_cat:\r\n   {\r\n    name: \"\",\r\n    age: 0\r\n   }\r\n};\r\n\r\nconst catFormReducer = function(state = initialState, action) {\r\n\r\n  switch(action.type) {\r\n    case types.UPDATE_CAT_CREATING_FORM:\r\n        return {  ...state, c_cat: { name: action.name, age: action.age } }\r\n    case types.UPDATE_CAT_UPDATING_FORM:\r\n        return {  ...state, u_cat: { name: action.name, age: action.age }  }\r\n  }\r\n\r\n  return state;\r\n\r\n}\r\n\r\n/**\r\n * State of input cat data\r\n */\r\nexport default catFormReducer;","import { useEffect} from 'react'\r\nimport  store from \"../store\"\r\nimport { tokenGetActions, tokenReadyAction } from \"../reducers/actions/action-types\"\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const setToLocalSorage =(jwtToken, userName) => {\r\n    localStorage.setItem(storageName, JSON.stringify({\r\n        jwtToken, userName\r\n    }))\r\n}\r\n\r\nexport const getJwtTokenData = () => {\r\n    const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n    return data ? { jwtToken: data.jwtToken || null, userName: data.userName || null } : { jwtToken: null, userName: null }\r\n}\r\n\r\nexport const removeFromLocalSorage = () => {\r\n    localStorage.removeItem(storageName)\r\n}\r\n\r\n/**\r\n * Hook for working with auth user creds in localsotage\r\n */\r\nexport const useAuth = () => {\r\n\r\n    useEffect(() => {\r\n        const data = getJwtTokenData()\r\n    \r\n        if (data.jwtToken) {\r\n          store.dispatch( tokenGetActions.success({ jwtToken: data.jwtToken, userName: data.userName }) )\r\n        }\r\n        \r\n        store.dispatch( tokenReadyAction() )\r\n\r\n      }, [getJwtTokenData])\r\n\r\n    return { setToLocalSorage, removeFromLocalSorage, getJwtTokenData }\r\n}","import * as types from '../reducers/actions/action-types';\r\nimport { removeFromLocalSorage, setToLocalSorage } from '../hooks/auth.hook';\r\n\r\nconst initialState = {\r\n  jwtToken: null,\r\n  userName: null,\r\n  isLoading: false,\r\n  isReady: false\r\n};\r\n\r\nconst authReducer = function(state = initialState, action) {\r\n\r\n  switch(action.type) {\r\n\r\n    case types.TOKEN_GET[types.SUCCESS]:\r\n        setToLocalSorage(action.jwtToken, action.userName)\r\n        return {  ...state, jwtToken: action.jwtToken, userName: action.userName, isLoading: false  }\r\n    case types.TOKEN_REMOVE:\r\n        removeFromLocalSorage()\r\n        return {  ...state, jwtToken: null, userName: null  }\r\n    case types.TOKEN_GET[types.REQUEST]:\r\n        return {  ...state, isLoading: true  }\r\n    case types.TOKEN_READY:\r\n        return {  ...state, isReady: true  }\r\n\r\n  }\r\n\r\n  return state;\r\n\r\n}\r\n\r\n/**\r\n * State of auth user credentions\r\n */\r\nexport default authReducer;","import * as types from '../reducers/actions/action-types';\r\n\r\nconst initialState = {\r\n   username: \"\",\r\n   password: \"\",\r\n};\r\n\r\nconst authFormReducer = function(state = initialState, action) {\r\n\r\n  switch(action.type) {\r\n\r\n    case types.UPDATE_AUTH_FORM:\r\n        return {  ...state, username: action.username, password: action.password  }\r\n\r\n  }\r\n\r\n  return state;\r\n\r\n}\r\n/**\r\n * State of user credentions for auth\r\n */\r\nexport default authFormReducer;","import { combineReducers } from 'redux';\r\n\r\n// Reducers\r\nimport catState from '../reducers/cats-crud-reducer';\r\nimport catFormState from '../reducers/cat-forms-reducer';\r\nimport authState from '../reducers/auth-reducer';\r\nimport authFormState from '../reducers/auth-forms-reducer';\r\n\r\n// Combine Reducers\r\nvar reducers = combineReducers({\r\n    catState,\r\n    catFormState,\r\n    authState,\r\n    authFormState\r\n});\r\n\r\n\r\n/**\r\n * Combining all reducers\r\n */\r\nexport default reducers;","\r\n/**\r\n * Hook for working with requests \r\n */\r\nexport const useHttp = (token) => {\r\n\r\n\r\n    const request =  async (url, method, body, headers = {}) => {\r\n\r\n        console.log( url, body )\r\n\r\n        headers  = {\r\n            \"Accept\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"X-Requested-With\": \"XMLHttpRequest\",\r\n            \"Access-Control-Allow-Methods\" : \"*\",\r\n            \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\r\n            ...headers\r\n        }\r\n\r\n        try {\r\n            if(token) {\r\n                headers = {\r\n                    ...headers,\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }\r\n            if(body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-type'] = 'application/json'\r\n            }\r\n\r\n            const response = await fetch(url, {method, body, headers})\r\n            const data = (async () => { try { return await response.json() } catch(e) { return {} } })()\r\n\r\n            if(!response.ok) {\r\n                throw new Error(data.message \r\n                    || 'Something wrong')\r\n            }\r\n\r\n            return data\r\n        } catch(e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    return request\r\n}","import { put, takeLatest, all } from 'redux-saga/effects'\r\nimport { useCatApi } from \"./hooks/api/cat.api\"\r\nimport * as types from \"./reducers/actions/action-types\"\r\nimport { getJwtTokenData, setToLocalSorage } from './hooks/auth.hook'\r\nimport { useUserApi } from './hooks/api/user.api'\r\n\r\n\r\nconst catApi = useCatApi(getJwtTokenData().jwtToken)\r\n\r\nconst userApi = useUserApi()\r\n\r\n\r\n\r\n\r\nfunction* fetchCats() {\r\n  const cats = yield catApi.getCats();    \r\n  yield put(types.catGetsActions.success(cats));\r\n}\r\n\r\nfunction* fetchCat(action) {\r\n    const cat = yield catApi.getCat({ id: action.id });    \r\n    yield put(types.catGetActions.success( {cat} ));\r\n    yield put(types.updateCatUpdatingFormAction( cat ));\r\n}\r\n\r\nfunction* createCat(action) {\r\n    yield catApi.addCat( { name: action.name, age: action.age  } );    \r\n    yield put(types.catCreateActions.success());\r\n    yield put(types.updateCatCreatingFormAction({ name: \"\", age: \"\" }));\r\n    yield put( types.catGetsActions.request() )\r\n}\r\n\r\nfunction* updateCat(action) {\r\n    yield catApi.updateCat({ cat: { id: action.id, name: action.name, age: action.age, isAlive: action.isAlive } }) \r\n    yield put(types.catUpdateActions.success({ cat: { id: action.id, name: action.name, age: action.age, isAlive: action.isAlive } }));\r\n}\r\n\r\nfunction* deleteCat(action) {\r\n    yield catApi.deleteCat({ id: action.id });    \r\n    yield put(types.catDeleteActions.success(action.id));\r\n}\r\n\r\nfunction* getToken(action) {\r\n    const token = yield userApi.getToken({ username: action.username, password: action.password })\r\n    yield put( types.tokenGetActions.success({ jwtToken: token.token, userName: token.userName }) )\r\n}\r\n\r\n\r\nfunction* fetchCatsWatcher() {\r\n    yield takeLatest( types.CAT_GETS[types.REQUEST], fetchCats)\r\n}\r\nfunction* fetchCatWatcher() {\r\n    yield takeLatest( types.CAT_GET[types.REQUEST], fetchCat)\r\n}\r\nfunction* createCatWatcher() {\r\n    yield takeLatest(types.CAT_CREATE[types.REQUEST], createCat)\r\n}\r\nfunction* updateCatWatcher() {\r\n    yield takeLatest(types.CAT_UPDATE[types.REQUEST], updateCat)\r\n}\r\nfunction* deleteCatWatcher() {\r\n    yield takeLatest(types.CAT_DELETE[types.REQUEST], deleteCat)\r\n}\r\nfunction* getTokenWatcher() {\r\n    yield takeLatest(types.TOKEN_GET[types.REQUEST], getToken)\r\n}\r\n\r\n\r\nexport default function* rootSaga() {\r\n   yield all([\r\n    fetchCatsWatcher(),\r\n    fetchCatWatcher(),\r\n    createCatWatcher(),\r\n    updateCatWatcher(),\r\n    deleteCatWatcher(),\r\n    getTokenWatcher()\r\n   ]);\r\n}","import {useHttp} from \"../http.hook\";\r\nimport { useCallback } from 'react'\r\n\r\n\r\n\r\n\r\n/**\r\n * Api for CRUD cat operations\r\n */\r\nexport const useCatApi = (jwtToken) => {\r\n    \r\n    var request = useHttp(jwtToken);\r\n\r\n    const getCats = \r\n        async () => {\r\n\r\n            var cats = await request(`/api/cats`, 'GET')\r\n            return cats;\r\n        }  \r\n        \r\n\r\n\r\n    const getCat = async (req) =>  {\r\n\r\n        var cat = await request(`/api/cats/` + req.id, 'GET')\r\n        \r\n        return cat;\r\n    }\r\n\r\n\r\n\r\n    const deleteCat = async (req) => {\r\n        \r\n        await request(`/api/cats/` + req.id, 'DELETE')\r\n    }\r\n\r\n    const addCat = async (req) => {\r\n\r\n        await request(`/api/cats`, 'POST', { name: req.name, age: parseInt(req.age) } )\r\n\r\n    }\r\n\r\n\r\n    const updateCat = async (req) => {\r\n        await request(`/api/cats`, 'PUT', { id: req.cat.id, name: req.cat.name, age: parseInt(req.cat.age) })\r\n    }\r\n\r\n    return { getCat, getCats, addCat, updateCat, deleteCat  }\r\n\r\n}","import { useHttp } from \"../http.hook\";\r\n\r\n\r\n/**\r\n * Api for creating auth token\r\n */\r\nexport const useUserApi = () => {\r\n\r\n    var request = useHttp();\r\n    \r\n    const getToken = \r\n        async (req) => {\r\n            var token = await request(`/api/account/token`, 'POST', req, {})\r\n            return token;\r\n        }\r\n     \r\n        \r\n    return { getToken  }\r\n\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n   reducers,\r\n   applyMiddleware(sagaMiddleware),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n/**\r\n * Redux default store with combined reducers and saga\r\n */\r\nexport default store;","import React, {useCallback,  useEffect } from 'react'\r\nimport {Loader} from '../components/Loader'\r\nimport CatList from '../components/CatList'\r\nimport { connect } from 'react-redux'\r\nimport store from '../store'\r\nimport * as types from \"../reducers/actions/action-types\"\r\n\r\nconst CatsPage = (state) => {\r\n\r\n  const deleteHandler = useCallback(async (id) => {\r\n    store.dispatch( types.catDeleteActions.request(id) )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    store.dispatch( types.catGetsActions.request() )\r\n  }, [])\r\n\r\n  if (state.data.isLoading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!state.data.isLoading && <CatList deleteHandler={deleteHandler} />}\r\n    </>\r\n  )\r\n}\r\n\r\n/**\r\n * Container  component for display all cats and remove any of it\r\n */\r\nexport default connect( state => ( { data: state.catState, creds: state.authState } ) )(CatsPage)","import React, { useEffect, useCallback } from 'react'\r\nimport {useCatApi} from '../hooks/api/cat.api'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport store from '../store'\r\nimport * as types from \"../reducers/actions/action-types\"\r\n\r\nconst CreatePage = (state) => {\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const changeHandler = useCallback(event => {\r\n    store.dispatch( types.updateCatCreatingFormAction({ ...state.form, [event.target.name]: event.target.value }) )\r\n  }, [state.form])\r\n\r\n  const pressHandler = useCallback(async event => {\r\n    if (event.key === 'Enter') {\r\n        store.dispatch( types.catCreateActions.request(state.form) )\r\n        history.push(`/cats`)\r\n    }\r\n  }, [state.form])\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Введите имя\"\r\n            id=\"cat-name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={state.form.name}\r\n            onChange={changeHandler}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"cat-name\">Введите имя</label>\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Введите возраст\"\r\n            id=\"cat-age\"\r\n            name=\"age\"\r\n            type=\"text\"\r\n            value={state.form.age}\r\n            onChange={changeHandler}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"cat-age\">Введите возраст</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * Container and presentional component for creating new cat\r\n */\r\nexport default connect(state => ({ form: state.catFormState.c_cat, creds: state.authState }))(CreatePage)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst CatCard = ({ updateHandler, changeHandler, form, cat }) => {\r\n    return(\r\n        <>\r\n            <h2>Cat info</h2>\r\n\r\n            <p><b>Id:</b> {cat.id}</p>\r\n            <p><b>isAlive:</b> {cat.isAlive.toString()}</p>\r\n            <p><b>Name:</b> {cat.name.toString()}</p>\r\n            <p><b>Age:</b> {cat.age.toString()}</p>\r\n\r\n             <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className=\"yellow-input\"\r\n                  value={form.name}\r\n                  onChange={changeHandler}\r\n            />\r\n            <label htmlFor=\"name\">Имя</label>\r\n            <input\r\n                  id=\"age\"\r\n                  type=\"text\"\r\n                  name=\"age\"\r\n                  className=\"yellow-input\"\r\n                  value={form.age}\r\n                  onChange={changeHandler}\r\n            />\r\n            <label htmlFor=\"age\">Возраст</label>\r\n            <button onClick={updateHandler}>Обновить кота</button>\r\n        </>\r\n    )\r\n}\r\n\r\n/**\r\n * Presentional component for display cat info\r\n */\r\nexport default connect( state => ( {form:state.catFormState.u_cat, cat: state.catState.cat} ) )(CatCard)","import React, {useCallback, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {Loader} from '../components/Loader'\r\nimport CatCard from '../components/CatCard'\r\nimport { connect } from 'react-redux'\r\nimport store from '../store'\r\nimport * as types from \"../reducers/actions/action-types\"\r\n\r\nconst CatPage = (state) => {\r\n\r\n  const catId = useParams().id\r\n\r\n  const changeHandler = useCallback(event => {\r\n    store.dispatch( types.updateCatUpdatingFormAction({ ...state.form, [event.target.name]: event.target.value }) )\r\n  }, [state.form])\r\n\r\n  const updateHandler = useCallback(async event => {\r\n    store.dispatch( types.catUpdateActions.request({ ...state.data.cat, ...state.form }) )\r\n   }, [state.data.cat, state.form])\r\n\r\n  useEffect(() => {\r\n    store.dispatch( types.catGetActions.request(catId) )\r\n  }, [catId])\r\n\r\n  if (state.data.isLoading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { !state.data.isLoading && state.data.cat && <CatCard changeHandler={changeHandler} updateHandler={updateHandler} /> }\r\n    </>\r\n  )\r\n}\r\n\r\n/**\r\n * Container  component for display cat all information and update it\r\n */\r\nexport default connect( state => ({ form: state.catFormState.u_cat, data: state.catState, creds: state.authState }) )( CatPage )","import React, { useEffect, useCallback } from 'react'\r\nimport store from '../store'\r\nimport { connect } from 'react-redux';\r\nimport * as types from '../reducers/actions/action-types'\r\n\r\nconst AuthPage = (state) => {\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const changeHandler = useCallback(event => {\r\n    store.dispatch( types.updateAuthFormAction({ ...state.form, [event.target.name]: event.target.value }) )\r\n  }, [state.form])\r\n\r\n\r\n  const loginHandler = useCallback(async () => {\r\n    try {\r\n      store.dispatch( types.tokenGetActions.request(state.form) )\r\n    } catch (e) { alert(e.message) }\r\n  }, [state.form])\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h1>CRUD Котов</h1>\r\n        <div className=\"card blue darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Авторизация</span>\r\n            <div>\r\n\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Введите login\"\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  className=\"yellow-input\"\r\n                  value={state.form.username}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"username\">Логин</label>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Введите пароль\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"yellow-input\"\r\n                  value={state.form.password}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Пароль</label>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn yellow darken-4\"\r\n              style={{marginRight: 10}}\r\n              disabled={state.creds.isLoading}\r\n              onClick={loginHandler}\r\n            >\r\n              Войти\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * Container  and presentional component for authorise user\r\n */\r\nexport default connect((state) => ( { form: state.authFormState, creds: state.authState  } ))(AuthPage);","import React from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport store from '../store';\r\nimport * as types from \"../reducers/actions/action-types\"\r\n\r\nconst Navbar = (state) => {\r\n  const history = useHistory()\r\n\r\n  const logoutHandler = event => {\r\n    event.preventDefault()\r\n    store.dispatch( types.tokenRemoveAction() )\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue darken-1\">\r\n        <span className=\"brand-logo\">CRUD Котов, <b>{state.creds.userName}</b></span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n          <li><NavLink to=\"/cats\">Список котов</NavLink></li>\r\n          <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n/**\r\n * Presentional component for navigation in application\r\n */\r\nexport default connect(state => ( { creds: state.authState } ))(Navbar)","import React from 'react'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport {useRoutes} from './routes'\r\nimport { connect } from 'react-redux';\r\nimport { getJwtTokenData, useAuth } from './hooks/auth.hook'\r\nimport Navbar from './components/Navbar'\r\nimport {Loader} from './components/Loader'\r\nimport 'materialize-css'\r\n\r\nfunction App(state) {\r\n\r\n  useAuth()\r\n\r\n  const isAuthenticated = !!getJwtTokenData().jwtToken\r\n  const routes = useRoutes(isAuthenticated)\r\n\r\n\r\n  if (!state.creds.isReady) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n      <Router>\r\n        { isAuthenticated && <Navbar /> }\r\n        <div className=\"container\">\r\n          {routes}\r\n        </div>\r\n      </Router>\r\n  )\r\n}\r\n\r\n/**\r\n * Application component\r\n */\r\nexport default connect( state => ( { creds: state.authState } ) )(App)","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport CatsPage from './modules/CatsPage'\r\nimport CreatePage from './modules/CreatePage'\r\nimport CatPage from './modules/CatPage'\r\nimport AuthPage from './modules/AuthPage'\r\n\r\n\r\n/**\r\n * Component for map path and componentns of application\r\n */\r\nexport const useRoutes = isAuthenticated => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/cats\" exact>\r\n          <CatsPage />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Route path=\"/cat/:id\">\r\n          <CatPage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));"],"sourceRoot":""}