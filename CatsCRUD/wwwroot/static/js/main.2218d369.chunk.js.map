{"version":3,"sources":["components/Loader.js","components/CatList.js","reducers/actions/cats-crud-actions.js","reducers/actions/action-types.js","reducers/cats-crud-reducer.js","reducers/cat-forms-reducer.js","reducers/auth-reducer.js","reducers/auth-forms-reducer.js","reducers/index.js","store.js","hooks/http.hook.js","hooks/api/cat.api.js","modules/CatsPage.js","reducers/actions/cat-forms-actions.js","modules/CreatePage.js","components/CatCard.js","modules/CatPage.js","reducers/actions/auth-actions.js","hooks/auth.hook.js","modules/AuthPage.js","hooks/api/user.api.js","reducers/actions/auth-forms-actions.js","components/Navbar.js","App.js","routes.js","index.js"],"names":["Loader","className","connect","state","cats","catState","deleteHandler","length","map","cat","index","key","id","name","age","to","onClick","getCatsSuccess","type","getCatSuccess","deleteCatSuccess","initialState","isLoading","catReducer","action","filter","u_cat","c_cat","catFormReducer","jwtToken","userName","isReady","authReducer","username","password","authFormReducer","reducers","combineReducers","catFormState","authState","authFormState","store","createStore","useHttp","useCallback","url","method","body","a","headers","dispatch","JSON","stringify","fetch","response","data","json","ok","Error","message","useCatApi","request","getCats","req","Authorization","getCat","deleteCat","addCat","updateCat","creds","catApi","useEffect","updateCatParamSet","parseInt","createCatParamSet","form","history","useHistory","window","M","updateTextFields","changeHandler","event","target","value","pressHandler","push","style","paddingTop","placeholder","onChange","onKeyPress","htmlFor","updateHandler","isAlive","toString","catId","useParams","t","i","authUserSuccess","cred","useAuth","login","console","log","localStorage","setItem","logout","removeItem","parse","getItem","auth","userApi","getToken","token","useUserApi","loginHandler","alert","marginRight","disabled","href","preventDefault","isAuthenticated","routes","path","exact","useRoutes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2218d369.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Loader = () => (\r\n   <div>\r\n    <div className=\"preloader-wrapper active\">\r\n      <div className=\"spinner-layer spinner-red-only\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst CatList = ({ cats, deleteHandler }) => {\r\n  if (!cats.length) {\r\n    return <p className=\"center\">Котов пока нет</p>\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>№</th>\r\n        <th>Имя</th>\r\n        <th>Возраст</th>\r\n        <th>Открыть</th>\r\n        <th>X</th>\r\n      </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      { cats.map((cat, index) => {\r\n        return (\r\n          <tr key={cat.id}>\r\n            <td>{index + 1}</td>\r\n            <td>{cat.name}</td>\r\n            <td>{cat.age}</td>\r\n            <td>\r\n                <Link to={`/cat/${cat.id}`} >Подробнее</Link>\r\n            </td>\r\n            <td>\r\n                <button onClick={ () => deleteHandler(cat.id) } >Удалить</button>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }) }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default connect( state => ( {cats: state.catState.cats} ) )(CatList)\r\n","import * as types from '../../reducers/actions/action-types';\r\n\r\n\r\n\r\nexport function getCatsSuccess(cats) {\r\n    return {\r\n      type: types.GET_CATS_SUCCESS,\r\n      cats\r\n    };\r\n}\r\n\r\nexport function getCatSuccess(cat) {\r\n    return {\r\n      type: types.GET_CAT_SUCCESS,\r\n      cat\r\n    };\r\n}\r\n\r\n\r\nexport function deleteCatSuccess(id) {\r\n    return {\r\n      type: types.DELETE_CAT_SUCCESS,\r\n      id\r\n    };\r\n}\r\n\r\nexport function updateCatSuccess(cat) {\r\n    return {\r\n      type: types.UPDATE_CAT_SUCCESS,\r\n      cat\r\n    };\r\n}\r\n\r\nexport function catRequestSended() {\r\n    return {\r\n      type: types.CAT_REQUEST_SENDED,\r\n    };\r\n}\r\n\r\nexport function catRequestSending() {\r\n    return {\r\n      type: types.CAT_REQUEST_SENDING,\r\n    };\r\n}","// Auth\r\nexport const AUTH_USER_SUCCESS = 'AUTH_USER_SUCCESS';\r\nexport const AUTH_REQUEST_SENDING = 'AUTH_REQUEST_SENDING';\r\nexport const AUTH_REQUEST_SENDED = 'AUTH_REQUEST_SENDED';\r\nexport const AUTH_TOKEN_READY = \"AUTH_TOKEN_READY\"\r\n\r\n// Auth forms \r\n\r\nexport const AUTH_PARAM_SET = 'AUTH_PARAM_SET';\r\n\r\n\r\n\r\n// Cats CRUD\r\n\r\nexport const GET_CATS_SUCCESS = \"GET_CATS_SUCCESS\";\r\nexport const GET_CAT_SUCCESS = \"GET_CAT_SUCCESS\";\r\nexport const DELETE_CAT_SUCCESS = \"DELETE_CAT_SUCCESS\";\r\nexport const UPDATE_CAT_SUCCESS = \"UPDATE_CAT_SUCCESS\";\r\nexport const CREATE_CAT_SUCCESS = \"CREATE_CAT_SUCCESS\";\r\nexport const CAT_REQUEST_SENDING = \"CAT_REQUEST_SENDING\";\r\nexport const CAT_REQUEST_SENDED = \"CAT_REQUEST_SENDED\";\r\n\r\n// Cat forms\r\n\r\nexport const UPDATE_CAT_PARAM_SET = 'UPDATE_CAT_PARAM_SET';\r\nexport const CREATE_CAT_PARAM_SET = 'CREATE_CAT_PARAM_SET';\r\n\r\n","import * as types from '../reducers/actions/action-types';\r\n\r\nconst initialState = {\r\n   cats: [],\r\n   cat: null,\r\n   isLoading: false\r\n};\r\n\r\nconst catReducer = function(state = initialState, action) {\r\n\r\n\r\n  switch(action.type) {\r\n\r\n    case types.GET_CATS_SUCCESS:\r\n        return {  ...state, cats: action.cats  }\r\n    case types.GET_CAT_SUCCESS:\r\n        return {  ...state, cat: action.cat  }\r\n    case types.DELETE_CAT_SUCCESS:\r\n        return {  ...state, cats: [...state.cats.filter( cat => cat.id !== action.id )]  }\r\n    case types.UPDATE_CAT_SUCCESS:\r\n        return { ...state, cat: action.cat }\r\n    case types.CAT_REQUEST_SENDING:\r\n        return {  ...state, isLoading: true  }\r\n    case types.CAT_REQUEST_SENDED:\r\n        return {  ...state, isLoading: false  }\r\n  }\r\n\r\n  return state;\r\n\r\n}\r\n\r\nexport default catReducer;","import * as types from '../reducers/actions/action-types';\r\n\r\nconst initialState = {\r\n   u_cat: \r\n   {\r\n    name: \"\",\r\n    age: 0\r\n   },\r\n   c_cat:\r\n   {\r\n    name: \"\",\r\n    age: 0\r\n   }\r\n};\r\n\r\nconst catFormReducer = function(state = initialState, action) {\r\n\r\n  switch(action.type) {\r\n\r\n    case types.UPDATE_CAT_PARAM_SET:\r\n        return {  ...state, u_cat: { name: action.name, age: action.age } }\r\n    case types.CREATE_CAT_PARAM_SET:\r\n        return {  ...state, c_cat: { name: action.name, age: action.age }  }\r\n  }\r\n\r\n  return state;\r\n\r\n}\r\n\r\nexport default catFormReducer;","import * as types from '../reducers/actions/action-types';\r\n\r\nconst initialState = {\r\n  jwtToken: null,\r\n  userName: null,\r\n  isLoading: false,\r\n  isReady: false\r\n};\r\n\r\nconst authReducer = function(state = initialState, action) {\r\n\r\n  switch(action.type) {\r\n\r\n    case types.AUTH_USER_SUCCESS:\r\n      return {  ...state, jwtToken: action.jwtToken, userName: action.userName  }\r\n    case types.AUTH_REQUEST_SENDING:\r\n        return {  ...state, isLoading: true  }\r\n    case types.AUTH_REQUEST_SENDED:\r\n        return {  ...state, isLoading: false  }\r\n    case types.AUTH_TOKEN_READY:\r\n        return {  ...state, isReady: true  }\r\n\r\n  }\r\n\r\n  return state;\r\n\r\n}\r\n\r\nexport default authReducer;","import * as types from '../reducers/actions/action-types';\r\n\r\nconst initialState = {\r\n   username: \"\",\r\n   password: \"\",\r\n};\r\n\r\nconst authFormReducer = function(state = initialState, action) {\r\n\r\n  switch(action.type) {\r\n\r\n    case types.AUTH_PARAM_SET:\r\n        return {  ...state, username: action.username, password: action.password  }\r\n\r\n  }\r\n\r\n  return state;\r\n\r\n}\r\n\r\nexport default authFormReducer;","import { combineReducers } from 'redux';\r\n\r\n// Reducers\r\nimport catState from '../reducers/cats-crud-reducer';\r\nimport catFormState from '../reducers/cat-forms-reducer';\r\nimport authState from '../reducers/auth-reducer';\r\nimport authFormState from '../reducers/auth-forms-reducer';\r\n\r\n// Combine Reducers\r\nvar reducers = combineReducers({\r\n    catState,\r\n    catFormState,\r\n    authState,\r\n    authFormState\r\n});\r\n\r\nexport default reducers;","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers);\r\nexport default store;","import { useCallback } from 'react'\r\nimport { catRequestSended, catRequestSending } from '../reducers/actions/cats-crud-actions'\r\nimport store from '../store';\r\n\r\nexport const useHttp = () => {\r\n\r\n\r\n    const request = useCallback(async (url, method, body, headers = {}) => {\r\n\r\n        store.dispatch(catRequestSending())\r\n\r\n        headers  = {\r\n            \"Accept\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"X-Requested-With\": \"XMLHttpRequest\",\r\n            \"Access-Control-Allow-Methods\" : \"*\",\r\n            \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\r\n            ...headers\r\n        }\r\n\r\n        try {\r\n            if(body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-type'] = 'application/json'\r\n            }\r\n\r\n            const response = await fetch(url, {method, body, headers})\r\n            const data = (async () => { try { return await response.json() } catch(e) { return {} } })()\r\n\r\n            if(!response.ok) {\r\n                throw new Error(data.message \r\n                    || 'Something wrong')\r\n            }\r\n\r\n            store.dispatch(catRequestSended())\r\n\r\n            return data\r\n        } catch(e) {\r\n            store.dispatch(catRequestSended())\r\n            throw e\r\n        }\r\n    }, [])\r\n\r\n    return request\r\n}","import {useHttp} from \"../http.hook\";\r\nimport { useCallback } from 'react'\r\n\r\n\r\n\r\n\r\n\r\nexport const useCatApi = () => {\r\n    \r\n    var request = useHttp();\r\n\r\n    const getCats = useCallback\r\n    (\r\n        async (req) => {\r\n\r\n            var cats = await request(`/api/cats`, 'GET', null, {\r\n                Authorization: `Bearer ${req.jwtToken}`\r\n            })\r\n            return cats;\r\n        }, []\r\n    )    \r\n        \r\n\r\n\r\n    const getCat = useCallback(async (req) =>  {\r\n\r\n        var cat = await request(`/api/cats/` + req.id, 'GET', null, {\r\n            Authorization: `Bearer ${req.jwtToken}`\r\n        })\r\n        \r\n        return cat;\r\n    }, [])\r\n\r\n\r\n\r\n    const deleteCat = useCallback( async (req) => {\r\n        \r\n        await request(`/api/cats/` + req.id, 'DELETE', null, {\r\n            Authorization: `Bearer ${req.jwtToken}`\r\n        })\r\n    }, [])\r\n\r\n    const addCat = useCallback( async (req) => {\r\n\r\n        await request(`/api/cats`, 'POST', { name: req.name, age: req.age }, {\r\n            Authorization: `Bearer ${req.jwtToken}`\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    const updateCat = useCallback( async (req) => {\r\n        await request(`/api/cats`, 'PUT', { ...req.cat }, {\r\n            Authorization: `Bearer ${req.jwtToken}`\r\n        })\r\n    }, [])\r\n\r\n    return { getCat, getCats, addCat, updateCat, deleteCat  }\r\n\r\n}","import React, {useCallback,  useEffect } from 'react'\r\nimport {Loader} from '../components/Loader'\r\nimport CatList from '../components/CatList'\r\nimport { connect } from 'react-redux'\r\nimport { useCatApi } from '../hooks/api/cat.api'\r\nimport store from '../store'\r\nimport { getCatsSuccess, deleteCatSuccess } from '../reducers/actions/cats-crud-actions'\r\n\r\nconst CatsPage = (state) => {\r\n\r\n\r\n  const catApi = useCatApi()\r\n\r\n  const getCats = useCallback(async () => {\r\n    var cats = await catApi.getCats(  { jwtToken: state.creds.jwtToken }  )\r\n    store.dispatch( getCatsSuccess(cats) )\r\n  },[state.creds.jwtToken])\r\n\r\n  const deleteHandler = useCallback(async (id) => {\r\n    await catApi.deleteCat( { jwtToken: state.creds.jwtToken, id } )\r\n    store.dispatch( deleteCatSuccess(id) )\r\n  }, [state.creds.jwtToken])\r\n\r\n  useEffect(() => {\r\n    getCats()\r\n  }, [state.creds.jwtToken])\r\n\r\n  if (state.data.isLoading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!state.data.isLoading && <CatList deleteHandler={deleteHandler} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect( state => ( { data: state.catState, creds: state.authState } ) )(CatsPage)","import * as types from '../../reducers/actions/action-types';\r\n\r\n\r\n\r\nexport function updateCatParamSet(cat) {\r\n    return {\r\n      type: types.UPDATE_CAT_PARAM_SET,\r\n      name: cat.name,\r\n      age: parseInt(cat.age)\r\n    };\r\n}\r\n\r\nexport function createCatParamSet(cat) {\r\n    return {\r\n      type: types.CREATE_CAT_PARAM_SET,\r\n      name: cat.name,\r\n      age: parseInt(cat.age)\r\n    };\r\n}\r\n\r\n","import React, { useEffect, useCallback } from 'react'\r\nimport {useCatApi} from '../hooks/api/cat.api'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {createCatParamSet} from '../reducers/actions/cat-forms-actions'\r\nimport { connect } from 'react-redux'\r\nimport store from '../store'\r\n\r\nconst CreatePage = (state) => {\r\n  const history = useHistory()\r\n  const catApi = useCatApi()\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const changeHandler = useCallback(event => {\r\n    store.dispatch( createCatParamSet({ ...state.form, [event.target.name]: event.target.value }) )\r\n  }, [state.form])\r\n\r\n  const pressHandler = useCallback(async event => {\r\n    if (event.key === 'Enter') {\r\n        const data = await catApi.addCat({ jwtToken: state.creds.jwtToken, ...state.form })\r\n        store.dispatch( createCatParamSet({ name: \"\", age: 0 }) )\r\n        history.push(`/cats`)\r\n    }\r\n  }, [state.form, state.creds.jwtToken])\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Введите имя\"\r\n            id=\"cat-name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={state.form.name}\r\n            onChange={changeHandler}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"cat-name\">Введите имя</label>\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Введите возраст\"\r\n            id=\"cat-age\"\r\n            name=\"age\"\r\n            type=\"text\"\r\n            value={state.form.age}\r\n            onChange={changeHandler}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"cat-age\">Введите возраст</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({ form: state.catFormState.c_cat, creds: state.authState }))(CreatePage)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst CatCard = ({ updateHandler, changeHandler, form, cat }) => {\r\n    return(\r\n        <>\r\n            <h2>Cat info</h2>\r\n\r\n            <p><b>Id:</b> {cat.id}</p>\r\n            <p><b>isAlive:</b> {cat.isAlive.toString()}</p>\r\n            <p><b>Name:</b> {cat.name.toString()}</p>\r\n            <p><b>Age:</b> {cat.age.toString()}</p>\r\n\r\n             <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className=\"yellow-input\"\r\n                  value={form.name}\r\n                  onChange={changeHandler}\r\n            />\r\n            <label htmlFor=\"name\">Имя</label>\r\n            <input\r\n                  id=\"age\"\r\n                  type=\"text\"\r\n                  name=\"age\"\r\n                  className=\"yellow-input\"\r\n                  value={form.age}\r\n                  onChange={changeHandler}\r\n            />\r\n            <label htmlFor=\"age\">Возраст</label>\r\n            <button onClick={updateHandler}>Обновить кота</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect( state => ( {form:state.catFormState.u_cat, cat: state.catState.cat} ) )(CatCard)","import React, {useCallback, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useCatApi} from '../hooks/api/cat.api'\r\nimport {Loader} from '../components/Loader'\r\nimport CatCard from '../components/CatCard'\r\nimport { connect } from 'react-redux'\r\nimport store from '../store'\r\nimport { getCatSuccess, updateCatSuccess } from '../reducers/actions/cats-crud-actions'\r\nimport { updateCatParamSet } from '../reducers/actions/cat-forms-actions'\r\n\r\nconst CatPage = (state) => {\r\n\r\n  const catId = useParams().id\r\n\r\n  const catApi = useCatApi()\r\n\r\n  const changeHandler = useCallback(event => {\r\n    store.dispatch( updateCatParamSet({ ...state.form, [event.target.name]: event.target.value }) )\r\n  }, [state.form])\r\n\r\n  const updateHandler = useCallback(async event => {\r\n    await catApi.updateCat( { jwtToken: state.creds.jwtToken, cat: { ...state.data.cat, ...state.form } } )\r\n\r\n    store.dispatch( updateCatSuccess({ ...state.data.cat, ...state.form }) )\r\n   }, [state.data.cat, state.form, state.creds.jwtToken])\r\n\r\n  const getCat = useCallback(async (t, i) => {\r\n    var cat = await catApi.getCat( { jwtToken: t, id: i  } )\r\n    store.dispatch( getCatSuccess(cat) )\r\n    store.dispatch(  updateCatParamSet( { name: cat.name, age: cat.age } ) )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n     getCat(state.creds.jwtToken, catId)\r\n  }, [state.creds.jwtToken, catId])\r\n\r\n  if (state.data.isLoading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { !state.data.isLoading && state.data.cat && <CatCard changeHandler={changeHandler} updateHandler={updateHandler} /> }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect( state => ({ form: state.catFormState.u_cat, data: state.catState, creds: state.authState }) )( CatPage )","import * as types from '../../reducers/actions/action-types';\r\n\r\nexport function authUserSuccess(cred) {\r\n  return {\r\n    type: types.AUTH_USER_SUCCESS,\r\n    jwtToken: cred.jwtToken,\r\n    userName: cred.userName\r\n  };\r\n}\r\n\r\nexport function authRequestSending() {\r\n    return {\r\n      type: types.AUTH_REQUEST_SENDING,\r\n    };\r\n}\r\n\r\nexport function authRequestSended() {\r\n    return {\r\n      type: types.AUTH_REQUEST_SENDED,\r\n    };\r\n}\r\n\r\nexport function authTokenReady() {\r\n    return {\r\n      type: types.AUTH_TOKEN_READY,\r\n    };\r\n}","import { useCallback, useEffect} from 'react'\r\nimport  store from \"../store\"\r\nimport { authUserSuccess, authTokenReady } from \"../reducers/actions/auth-actions\"\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n\r\n    const login = useCallback((jwtToken, userName) => {\r\n        \r\n        console.log(\"dispatching login\", { jwtToken, userName })\r\n\r\n        store.dispatch( authUserSuccess({ jwtToken, userName }) )\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            jwtToken, userName\r\n        }))\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        \r\n        store.dispatch( authUserSuccess({ jwtToken: null, userName: null }) )\r\n\r\n        localStorage.removeItem(storageName)\r\n      }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n    \r\n        if (data && data.jwtToken) {\r\n          login(data.jwtToken, data.userName)\r\n        }\r\n        \r\n        store.dispatch( authTokenReady() )\r\n\r\n      }, [login])\r\n\r\n    return { login, logout }\r\n}","import React, { useEffect, useCallback } from 'react'\r\nimport store from '../store'\r\nimport { connect } from 'react-redux';\r\nimport { useAuth } from '../hooks/auth.hook'\r\nimport { useUserApi } from '../hooks/api/user.api'\r\nimport { authParamSet } from '../reducers/actions/auth-forms-actions'\r\n\r\nconst AuthPage = (state) => {\r\n\r\n  var auth = useAuth()\r\n\r\n  var userApi = useUserApi()\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const changeHandler = useCallback(event => {\r\n    store.dispatch( authParamSet({ ...state.form, [event.target.name]: event.target.value }) )\r\n  }, [state.form])\r\n\r\n\r\n  const loginHandler = useCallback(async () => {\r\n    try {\r\n      const token = await userApi.getToken(state.form)\r\n      auth.login(token.token, token.userName)\r\n    } catch (e) { alert(e.message) }\r\n  }, [state.form])\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h1>CRUD Котов</h1>\r\n        <div className=\"card blue darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Авторизация</span>\r\n            <div>\r\n\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Введите login\"\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  className=\"yellow-input\"\r\n                  value={state.form.username}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"username\">Логин</label>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Введите пароль\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"yellow-input\"\r\n                  value={state.form.password}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Пароль</label>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn yellow darken-4\"\r\n              style={{marginRight: 10}}\r\n              disabled={state.creds.isLoading}\r\n              onClick={loginHandler}\r\n            >\r\n              Войти\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ( { form: state.authFormState, creds: state.authState  } ))(AuthPage);","import { useHttp } from \"../http.hook\";\r\nimport { useCallback } from 'react'\r\n\r\n\r\n\r\nexport const useUserApi = () => {\r\n\r\n    var request = useHttp();\r\n    \r\n    const getToken = useCallback\r\n    (\r\n        async (req) => {\r\n\r\n            var token = await request(`/api/account/token`, 'POST', req, {})\r\n            return token;\r\n        }, []\r\n    )    \r\n        \r\n    return { getToken  }\r\n\r\n}","import * as types from '../../reducers/actions/action-types';\r\n\r\nexport function authParamSet(cred) {\r\n    return {\r\n      type: types.AUTH_PARAM_SET,\r\n      username: cred.username,\r\n      password : cred.password\r\n    };\r\n}\r\n\r\n","import React from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport { useAuth } from '../hooks/auth.hook'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (state) => {\r\n  const history = useHistory()\r\n  const auth = useAuth()\r\n\r\n  const logoutHandler = event => {\r\n    event.preventDefault()\r\n    auth.logout()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue darken-1\">\r\n        <span className=\"brand-logo\">CRUD Котов, <b>{state.creds.userName}</b></span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n          <li><NavLink to=\"/cats\">Список котов</NavLink></li>\r\n          <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default connect(state => ( { creds: state.authState } ))(Navbar)","import React from 'react'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport {useRoutes} from './routes'\r\nimport store from './store'\r\nimport { connect } from 'react-redux';\r\nimport { useAuth } from './hooks/auth.hook'\r\nimport Navbar from './components/Navbar'\r\nimport {Loader} from './components/Loader'\r\nimport 'materialize-css'\r\n\r\nfunction App(state) {\r\n  const auth = useAuth()\r\n  const isAuthenticated = !!state.creds.jwtToken\r\n  const routes = useRoutes(isAuthenticated)\r\n\r\n\r\n  if (!state.creds.isReady) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n      <Router>\r\n        { isAuthenticated && <Navbar /> }\r\n        <div className=\"container\">\r\n          {routes}\r\n        </div>\r\n      </Router>\r\n  )\r\n}\r\n\r\nexport default connect( state => ( { creds: state.authState } ) )(App)","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport CatsPage from './modules/CatsPage'\r\nimport CreatePage from './modules/CreatePage'\r\nimport CatPage from './modules/CatPage'\r\nimport AuthPage from './modules/AuthPage'\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/cats\" exact>\r\n          <CatsPage />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Route path=\"/cat/:id\">\r\n          <CatPage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));"],"sourceRoot":""}